# Refer to https://logging.apache.org/log4j/1.2/manual.html for log4j, especially to know how loggers and appenders work
# this property is key to understanding how Spring framework processes stuff. Although a lot of log statements are available,
# we need them as we try to understand this.
log4j.rootLogger=DEBUG, stdout, stderr
# With root logger having DEBUG, all the spring framework logging statements will be visible too. That's useful
# to understand what the framework is doing. If this is too verbose, configure it to use a less verbose level.
# this line is: log4j.rootlogger=<log-level>,appender1, appender2 ...

# configure stdout (this is an appender)
# set the conversion pattern of stdout
# Print the date in ISO 8601 format
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Threshold = DEBUG
log4j.appender.stdout.Target   = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = %-5p %d [%t][%F:%L] : %m%n
log4j.appender.stdout.filter.filter1=org.apache.log4j.varia.LevelRangeFilter
log4j.appender.stdout.filter.filter1.levelMin=TRACE
log4j.appender.stdout.filter.filter1.levelMax=INFO

# configure stderr (this is another appender)
# set the conversion pattern of stdout
# Print the date in ISO 8601 format
log4j.appender.stderr = org.apache.log4j.ConsoleAppender
log4j.appender.stderr.Threshold = DEBUG
log4j.appender.stderr.Target   = System.err
log4j.appender.stderr.layout = org.apache.log4j.PatternLayout
log4j.appender.stderr.layout.ConversionPattern = %-5p %d [%t][%F:%L] : %m%n